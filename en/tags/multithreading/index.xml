<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Multithreading on Sine's Site</title><link>https://ssine.ink/en/tags/multithreading/</link><description>Recent content in Multithreading on Sine's Site</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 03 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://ssine.ink/en/tags/multithreading/index.xml" rel="self" type="application/rss+xml"/><item><title>Reader-Writer Problem</title><link>https://ssine.ink/en/posts/reader-writer-problem/reader-writer-problem/</link><pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate><guid>https://ssine.ink/en/posts/reader-writer-problem/reader-writer-problem/</guid><description>Note: This article is automatically translated, please turn to the Chinese version for more accurate expression if possible.
This is an experiment in the operating system class, using the semaphore mechanism to realize the reader-writer problem. Use n threads to represent n readers and writers.
Operational restrictions for reader-writer problems:
Write-write mutual exclusion Read-write mutual exclusion Read-read allowed Additional restrictions for readers priority: If a reader is already reading when another reader is applying for a read operation, the reader can directly start the read operation.</description></item></channel></rss>